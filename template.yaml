AWSTemplateFormatVersion: '2010-09-09'
Transform:
  # - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31
Description: SAM Template for sam-webshell
# TODO: use HttpAPI not API

Globals:
  # https://github.com/aws/serverless-application-model/issues/191#issuecomment-2684694054
  Api:
    OpenApiVersion: 3.0.1
  Function:
    Timeout: 10
    MemorySize: 128
    Runtime: python3.11
    EventInvokeConfig:
      MaximumRetryAttempts: 2
    LoggingConfig:
      LogFormat: JSON

Resources:
  MyServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'POST,GET,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
           MyCognitoAuthorizer:
             UserPoolArn: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/us-east-1_zFCGSAHQH
  DocumentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/documents/
      Handler: app.lambda_file.lambda_handler
      LoggingConfig:
        LogGroup: /aws/lambda/sam-webshell-DocumentsFunction
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3FullAccessPolicy:
            BucketName: !Ref OutputBucket
        - S3FullAccessPolicy:
            BucketName: !Ref TemplatesBucket
      Events:
        CreateDocument:
          Type: Api
          Properties:
            RestApiId: !Ref MyServerlessRestApi
            Path: /documents/{template}
            Method: post
  AppResourcesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/app_resources/
      Handler: app.lambda_file.lambda_handler
      LoggingConfig:
        LogGroup: /aws/lambda/sam-webshell-AppResourcesFunction
      Environment:
        Variables:
          TEMPLATES_BUCKET: !Ref TemplatesBucket
          OUTPUT_BUCKET: !Ref OutputBucket
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3FullAccessPolicy:
            BucketName: !Ref OutputBucket
        - S3FullAccessPolicy:
            BucketName: !Ref TemplatesBucket
      Events:
        DetailResources:
          Type: Api
          Properties:
            RestApiId: !Ref MyServerlessRestApi
            Path: /resources
            Method: get

  TemplatesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-templates"

  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-output"

Outputs:
  RestApi:
    Description: API Gateway endpoint URL
    Value: !Sub >
      https://${MyServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${MyServerlessRestApi.Stage}/
  DocumentsFunction:
    Description: Documents Function ARN
    Value: !GetAtt DocumentsFunction.Arn
  DocumentsFunctionIamRole:
    Description: Implict role for Documents Function
    Value: !GetAtt DocumentsFunctionRole.Arn
  TemplatesBucket:
    Description: Bucket for template documents and emails
    Value: !GetAtt  TemplatesBucket.Arn
  OutputBucket:
    Description: Bucket for generated documents and emails
    Value: !GetAtt  OutputBucket.Arn